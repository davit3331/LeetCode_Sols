/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        
        ListNode newList = new ListNode(-1);
        ListNode preHead = newList;
        ListNode pointer1 = list1;
        ListNode pointer2 = list2;

        
        while(pointer1 != null && pointer2 != null){
        	
            if(pointer1.val <= pointer2.val){  
            	newList.next = pointer1;
                newList = newList.next;
            	pointer1 = pointer1.next;
            }else{
                newList.next = pointer2;
                newList = newList.next;
                pointer2 = pointer2.next;
            }
        }
        
        if(pointer1 == null) {
        	
        	while(pointer2 != null) {
        		newList.next = pointer2;
                newList = newList.next;
        		pointer2 = pointer2.next;
        	}
        }

        if(pointer2 == null) {
        	
        	while(pointer1 != null) {
        		newList.next = pointer1;
                newList = newList.next;
        		pointer1 = pointer1.next;
        	}
        }
        
        return preHead.next;
    }
}
