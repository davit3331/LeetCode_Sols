package linked_list_practice;

public class queue {
	Node first;
	Node last; 
	int length;
	
	
	class Node{
		int value;
		Node next;
		
		Node(int value){
			this.value = value;
		}
	}
	
	public queue(int value) {
		Node newNode = new Node(value);
		first = newNode;
		last = newNode;
		length = 1;
	}
	
	public void enqueue(int value) {
		
		Node newNode = new Node(value);
		
		if (length == 0) {
			first = newNode;
			last = newNode;
		} else {
			last.next = newNode;
			last = newNode;
		}
		length += 1;
	}
	
	public Node dequeue() {
		
		if (length == 0) return null;
		
		Node temp = first;
		
		if (length == 1) {
			first = null;
			last = null;
		}
		
		else {
			first = first.next;
			temp.next = null;
		}
		length -= 1;
		return temp;
		
	
	}
	
		

}
